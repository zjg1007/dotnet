@model Dnc.ViewModels.Article.ArticleVM
@using  Dnc.Entities.Article

<style type="text/css">
    .zlb {
        width: 100px;
        height: 40px;
        color: #000000;
        float: left;
        text-align: center;
        line-height: 40px;
        font-size: 12px;
        margin-left: 10px;
        border: 1px dashed #808080;
        font-family: 'Microsoft YaHei';
        cursor: pointer;
    }

    .clickB {
        background: #01AAED;
        color: #fff;
        border: 1px solid #01AAED;
    }
</style>
<div class="place">
    <span>位置：</span>
    <ul class="placeul">
        <li><a href="#">首页</a></li>
        <li><a href="#">表单</a></li>
    </ul>
</div>

<div class="formbody">

    <div class="formtitle"><span>基本信息</span></div>
    <form id="form" asp-controller="Admin" asp-action="form">
        <div asp-validation-summary="All" class="text-danger"></div>
        <ul class="forminfo">
            <li>
                <label asp-for="Name"></label><input asp-for="Name" name="Name" type="text" class="dfinput" /><i>标题不能超过30个字符</i>
                <span asp-validation-for="Name" class="text-danger"></span>
            </li>
            <li>
                <label asp-for="SubName"></label><input asp-for="SubName" name="SubName" type="text" class="dfinput" /><i>多个关键字用,隔开</i>
                <span asp-validation-for="SubName" class="text-danger"></span>
            </li>

            <li>
                <label>文章类型</label>
                @Html.DropDownList("ArticleTypeName", new SelectList(ViewBag.TypeList, "ID", "Name"), new { @class = "dfinput" })
            </li>

            <li>
                <label asp-for="Label" dataLebel="@Model.Label"></label>
                @foreach (var data in ViewBag.LabelList)
                {
                    <span class="zlb">@data.Name</span>
                }
            </li>
            <li></li>
            <li>
                <div>
                    <input type="hidden" id="ID" name="ID" value="@Model.ID" />
                    <input type="hidden" id="dataConten" value="@Model.Content" />
                    <input type="hidden" id="dataLebel" value="@Model.Label"/ >
                    <script id="editor" name="Content" type="text/plain" style="height:300px;">
                    </script>
                </div>
            </li>
        </ul>
        <label>&nbsp;</label><input name="" type="button" id="btn" class="btn" value="确认保存" />
        <script type="text/javascript">

                //实例化编辑器
                //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
                var ue = UE.getEditor('editor');


                function isFocus(e) {
                    alert(UE.getEditor('editor').isFocus());
                    UE.dom.domUtils.preventDefault(e)
                }
                function setblur(e) {
                    UE.getEditor('editor').blur();
                    UE.dom.domUtils.preventDefault(e)
                }
                function insertHtml() {
                    var value = prompt('插入html代码', '');
                    UE.getEditor('editor').execCommand('insertHtml', value)
                }
                function createEditor() {
                    enableBtn();
                    UE.getEditor('editor');
                }
                function getAllHtml() {
                    alert(UE.getEditor('editor').getAllHtml())
                }
                function getContent() {
                    var arr = [];
                    arr.push("使用editor.getContent()方法可以获得编辑器的内容");
                    arr.push("内容为：");
                    arr.push(UE.getEditor('editor').getContent());
                    alert(arr.join("\n"));
                }
                function getPlainTxt() {
                    var arr = [];
                    arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
                    arr.push("内容为：");
                    arr.push(UE.getEditor('editor').getPlainTxt());
                    alert(arr.join('\n'))
                }
                function setContent(isAppendTo) {
                    var arr = [];
                    arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
                    UE.getEditor('editor').setContent(isAppendTo);
                    alert(arr.join("\n"));
                }
                function setDisabled() {
                    UE.getEditor('editor').setDisabled('fullscreen');
                    disableBtn("enable");
                }

                function setEnabled() {
                    UE.getEditor('editor').setEnabled();
                    enableBtn();
                }

                function getText() {
                    //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
                    var range = UE.getEditor('editor').selection.getRange();
                    range.select();
                    var txt = UE.getEditor('editor').selection.getText();
                    alert(txt)
                }

                function getContentTxt() {
                    var arr = [];
                    arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
                    arr.push("编辑器的纯文本内容为：");
                    arr.push(UE.getEditor('editor').getContentTxt());
                    alert(arr.join("\n"));
                }
                function hasContent() {
                    var arr = [];
                    arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
                    arr.push("判断结果为：");
                    arr.push(UE.getEditor('editor').hasContents());
                    alert(arr.join("\n"));
                }
                function setFocus() {
                    UE.getEditor('editor').focus();
                }
                function deleteEditor() {
                    disableBtn();
                    UE.getEditor('editor').destroy();
                }
                function disableBtn(str) {
                    var div = document.getElementById('btns');
                    var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
                    for (var i = 0, btn; btn = btns[i++];) {
                        if (btn.id == str) {
                            UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
                        } else {
                            btn.setAttribute("disabled", "true");
                        }
                    }
                }
                function enableBtn() {
                    var div = document.getElementById('btns');
                    var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
                    for (var i = 0, btn; btn = btns[i++];) {
                        UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
                    }
                }

                function getLocalData() {
                    alert(UE.getEditor('editor').execCommand("getlocaldata"));
                }

                function clearLocalData() {
                    UE.getEditor('editor').execCommand("clearlocaldata");
                    alert("已清空草稿箱")
                }
                function getLebelTextAll() {
                    var mycars = new Array();
                    $('.clickB').each(function () {
                        mycars.push($(this).text());
                    });
                    return mycars.join(',');
                }
        </script>
    </form>

</div>

<script type="text/javascript">
        $(function () {
            var label = $('#dataLebel').val();
            var Conten = $('#dataConten').val();
            if (label != '') {
                $('.zlb').each(function () {
                    if (label.indexOf($(this).text())>=0) {
                        $(this).addClass('clickB');
                    }
                });
            }
            setTimeout(function () {
                if (Conten != '') {
                    //编辑器文本赋值
                    UE.getEditor('editor').setContent(Conten);
                }
             },3000);

            $('.zlb').click(function () {
                $(this).toggleClass('clickB');
            });
            //一般直接写在一个js文件中
            layui.use(['layer', 'form'], function () {
                var layer = layui.layer
                    , form = layui.form;

                $("#btn").on("click", function () {

                    //加载层-默认风格
                    layer.load();
                    $('#form').ajaxSubmit(      //ajax方式提交表单
                        {
                            url: '/Admin/Edit',
                            type: 'post',
                            dataType: 'json',
                            beforeSubmit: function () { },
                            data: {
                                htmlInfo: UE.getEditor('editor').getContent(),
                                Label: getLebelTextAll()
                            },
                            success: function (data) {
                                if (data.isLogon) {
                                    layer.msg(data.message);
                                    layer.closeAll('loading');
                                    window.parent.rightFrame.location.href = "/Admin/right"; 
                                } else { 
                                    layer.msg(data.message);
                                    layer.closeAll('loading');
                                }
                                
                            }
                        });
                });
            });
        });
</script>
